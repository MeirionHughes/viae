'use strict'; // code generated by pbf v3.2.0

// Msg ========================================

var Msg = exports.Msg = {};

Msg.read = function (pbf, end) {
    return pbf.readFields(Msg._readField, {id: "", head: {}, raw: null}, end);
};
Msg._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2)  { var entry = Msg._FieldEntry2.read(pbf, pbf.readVarint() + pbf.pos); obj.head[entry.key] = entry.value; }
    else if (tag === 3) obj.raw = pbf.readBytes();
};
Msg.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.head) for (var i in obj.head) if (Object.prototype.hasOwnProperty.call(obj.head, i)) pbf.writeMessage(2, Msg._FieldEntry2.write, { key: i, value: obj.head[i] });
    if (obj.raw) pbf.writeBytesField(3, obj.raw);
};

// Msg._FieldEntry2 ========================================

Msg._FieldEntry2 = {};

Msg._FieldEntry2.read = function (pbf, end) {
    return pbf.readFields(Msg._FieldEntry2._readField, {key: "", value: ""}, end);
};
Msg._FieldEntry2._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readString();
};
Msg._FieldEntry2.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeStringField(2, obj.value);
};
